""" Analyses the datai generated by grab_data_many.py on COSMA and produces
    a surface density and Q plot. """

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import matplotlib.colors as col
import survis
import pickle
from order_of_plots import order

filename = "snapshot_096_data.pkl"

def get_data():
    try:
        with open(filename, 'rb') as asset:
            return pickle.load(asset)
    except FileNotFoundError:
        with open("plotgen/{}".format(filename), 'rb') as asset:
            return pickle.load(asset)


def plot_single(ax, data, name, cmap, vmin, vmax, extent, delta=3):
    colormap = cm.get_cmap(cmap)
    colormap.set_bad("black", 1.0)     

    img = ax.imshow(data,
                    vmin=vmin,
                    vmax=vmax,
                    cmap=colormap,
                    extent=extent)

    text = ax.text(extent[0] + delta, extent[2] + delta, name, color="white", size=8)

    return ax, img


if __name__ == "__main__":
    """ Run in script mode, and produce plots """
    import matplotlib.gridspec as gridspec
    from matplotlib.ticker import MaxNLocator

    print("Generating the (simulation) Toomre Q Figure -- Q_analysis.py")

    fig = plt.figure(figsize=(7.8, 7.8))
    gs = gridspec.GridSpec(4, 3,
            height_ratios=[10, 10, 1, 9])

    extent = [-40, 40, -40, 40]
    vmin = 0
    vmax = 2
    cmap = "viridis"

    axes = [
        fig.add_subplot(gs[0, 0]),
        fig.add_subplot(gs[0, 1]),
        fig.add_subplot(gs[0, 2]),
        fig.add_subplot(gs[1, 0]),
        fig.add_subplot(gs[1, 1]),
        fig.add_subplot(gs[1, 2]),
        fig.add_subplot(gs[2:, 2]),
    ]

    for ax in axes:
        ax.xaxis.set_ticks([])
        ax.yaxis.set_ticks([])

    cbar_ax = fig.add_subplot(gs[2, 0:2])

    sim_data = get_data()

    for plot_ax, data in zip(axes, order):
        plot_ax, img = plot_single(plot_ax,
                                   sim_data[data].Q_map,
                                   data,
                                   cmap,
                                   vmin,
                                   vmax,
                                   extent)


    cb = plt.colorbar(img, cax=cbar_ax, orientation='horizontal', label="Toomre $Q$")
    cb.set_ticks(np.arange(0, 2, 0.25))
    ticklabels = ["0", "0.25", "0.5", "0.75", "1.0", "1.25", "1.5", r"   1.75 $\rightarrow$"]
    cb.set_ticklabels(ticklabels)


    # scalebar
    
    xs = np.arange(25, 35, 1)
    ys = np.zeros_like(xs) + 35
    axes[2].plot(xs, ys, color='white', linewidth=3, solid_capstyle='butt')
    axes[2].annotate('10 kpc', fontsize=8, xy=(22, 30), color='white')

    pad = 0.1
    fig.subplots_adjust(left=0+pad, bottom=0+pad, right=1-pad, top=1-pad, wspace=0, hspace=0)

    import sys
    
    if "--showfig" in sys.argv:
        fig.show()
        input()
    else:
        plt.savefig("plotgen/toomre_q_simulation.pdf", dpi=300)
                                   
